//
// Generated file, do not edit! Created by nedtool 5.7 from custMsg.msg.
//

#ifndef __CUSTMSG_M_H
#define __CUSTMSG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0507
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



/**
 * Class generated from <tt>custMsg.msg:22</tt> by nedtool.
 * <pre>
 * packet custMsg
 * {
 *     //Initial source id of the message
 *     int sourceId;
 * 
 *     //Unique message id for each message 
 *     int messageId;
 * 
 *  	//Message Id, which acknowledgemnt is send
 *     int ackMsgId;
 * 
 *      //Immediate sender id of the message
 *     int senderId;
 * 
 *     //Message intended receiver id
 *     int intendedReceiverId;
 * 
 *     //Initial packet or message generation time
 *     double packetGenerateTime;
 * 
 *     double packetReachToSinkTime;
 * 
 *     //Is this message a relay message or not
 *     bool isRelayMsg;
 * 
 *     double packetReachTime;
 * 
 *     double overheadDelay;
 * 
 * 
 * }
 * </pre>
 */
class custMsg : public ::omnetpp::cPacket
{
  protected:
    int sourceId;
    int messageId;
    int ackMsgId;
    int senderId;
    int intendedReceiverId;
    double packetGenerateTime;
    double packetReachToSinkTime;
    bool isRelayMsg;
    double packetReachTime;
    double overheadDelay;

  private:
    void copy(const custMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const custMsg&);

  public:
    custMsg(const char *name=nullptr, short kind=0);
    custMsg(const custMsg& other);
    virtual ~custMsg();
    custMsg& operator=(const custMsg& other);
    virtual custMsg *dup() const override {return new custMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual int getSourceId() const;
    virtual void setSourceId(int sourceId);
    virtual int getMessageId() const;
    virtual void setMessageId(int messageId);
    virtual int getAckMsgId() const;
    virtual void setAckMsgId(int ackMsgId);
    virtual int getSenderId() const;
    virtual void setSenderId(int senderId);
    virtual int getIntendedReceiverId() const;
    virtual void setIntendedReceiverId(int intendedReceiverId);
    virtual double getPacketGenerateTime() const;
    virtual void setPacketGenerateTime(double packetGenerateTime);
    virtual double getPacketReachToSinkTime() const;
    virtual void setPacketReachToSinkTime(double packetReachToSinkTime);
    virtual bool getIsRelayMsg() const;
    virtual void setIsRelayMsg(bool isRelayMsg);
    virtual double getPacketReachTime() const;
    virtual void setPacketReachTime(double packetReachTime);
    virtual double getOverheadDelay() const;
    virtual void setOverheadDelay(double overheadDelay);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const custMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, custMsg& obj) {obj.parsimUnpack(b);}


#endif // ifndef __CUSTMSG_M_H

